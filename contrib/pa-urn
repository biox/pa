#!/bin/sh

usage() {
    printf %s "\
  pa-urn

  commands:
    [c]lose [file] - Archive password store into file.
    [o]pen  [file] - Extract file into password store.
"
}

create_tar() {
    if command -v pax >/dev/null 2>&1; then
        pax -x ustar -w "./$1"
    else
        tar c "./$1"
    fi
}

extract_tar() {
    if command -v pax >/dev/null 2>&1; then
        pax -r
    else
        tar x
    fi
}

die() {
    printf '%s: %s.\n' "$(basename "$0")" "$1" >&2
    exit 1
}

set -o pipefail

age=$(command -v age || command -v rage) ||
    die "age not found, install per https://age-encryption.org"

: "${PA_DIR:=${XDG_DATA_HOME:-$HOME/.local/share}/pa}"

dir=$(realpath "$PA_DIR/passwords") ||
    die "couldn't get path to password directory"

name=$(basename "$dir")
if [ "$2" ]; then
    urn=$(realpath -- "$2") ||
        die "couldn't get path to file '$2'"
else
    urn=$(pwd)/$name.tar.age ||
        die "couldn't get working directory"
fi

cd "$(dirname "$dir")" ||
    die "couldn't change to parent of password directory"

case $1 in
c*)
    { create_tar "$name" | $age -R "$PA_DIR/recipients" -o "$urn"; } &&
        printf '%s\n' "store has been archived into $urn"
    ;;
o*)
    [ -f "$urn" ] ||
        die "file '$urn' doesn't exist"

    { $age --decrypt -i "$PA_DIR/identities" "$urn" | extract_tar; } &&
        printf '%s\n' "file has been extracted into $PA_DIR/passwords"
    ;;
*) usage ;;
esac
